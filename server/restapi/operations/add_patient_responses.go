// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddPatientCreatedCode is the HTTP code returned for type AddPatientCreated
const AddPatientCreatedCode int = 201

/*AddPatientCreated item created

swagger:response addPatientCreated
*/
type AddPatientCreated struct {
}

// NewAddPatientCreated creates AddPatientCreated with default headers values
func NewAddPatientCreated() *AddPatientCreated {

	return &AddPatientCreated{}
}

// WriteResponse to the client
func (o *AddPatientCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddPatientBadRequestCode is the HTTP code returned for type AddPatientBadRequest
const AddPatientBadRequestCode int = 400

/*AddPatientBadRequest invalid input, object invalid

swagger:response addPatientBadRequest
*/
type AddPatientBadRequest struct {
}

// NewAddPatientBadRequest creates AddPatientBadRequest with default headers values
func NewAddPatientBadRequest() *AddPatientBadRequest {

	return &AddPatientBadRequest{}
}

// WriteResponse to the client
func (o *AddPatientBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddPatientConflictCode is the HTTP code returned for type AddPatientConflict
const AddPatientConflictCode int = 409

/*AddPatientConflict an existing item already exists

swagger:response addPatientConflict
*/
type AddPatientConflict struct {
}

// NewAddPatientConflict creates AddPatientConflict with default headers values
func NewAddPatientConflict() *AddPatientConflict {

	return &AddPatientConflict{}
}

// WriteResponse to the client
func (o *AddPatientConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
