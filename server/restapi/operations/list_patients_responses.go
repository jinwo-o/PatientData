// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "PatientData/models"
)

// ListPatientsOKCode is the HTTP code returned for type ListPatientsOK
const ListPatientsOKCode int = 200

/*ListPatientsOK List of all patients

swagger:response listPatientsOK
*/
type ListPatientsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Patient `json:"body,omitempty"`
}

// NewListPatientsOK creates ListPatientsOK with default headers values
func NewListPatientsOK() *ListPatientsOK {

	return &ListPatientsOK{}
}

// WithPayload adds the payload to the list patients o k response
func (o *ListPatientsOK) WithPayload(payload []*models.Patient) *ListPatientsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list patients o k response
func (o *ListPatientsOK) SetPayload(payload []*models.Patient) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListPatientsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Patient, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListPatientsBadRequestCode is the HTTP code returned for type ListPatientsBadRequest
const ListPatientsBadRequestCode int = 400

/*ListPatientsBadRequest invalid input, object invalid

swagger:response listPatientsBadRequest
*/
type ListPatientsBadRequest struct {
}

// NewListPatientsBadRequest creates ListPatientsBadRequest with default headers values
func NewListPatientsBadRequest() *ListPatientsBadRequest {

	return &ListPatientsBadRequest{}
}

// WriteResponse to the client
func (o *ListPatientsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
